/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.7.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
        default         Gauss linear;
}

divSchemes
{
    default         none;

// alphaEqn
    div(phi,alpha)  Gauss limitedLinear01 1;
    div(phir,alpha) Gauss limitedLinear01 1;
// UEqn
    div(phia,Ua)    Gauss limitedLinearV 1;
    div(phib,Ub)    Gauss limitedLinearV 1;
    div(phiRa,Ua)   Gauss limitedLinear 1;
    div(phiRb,Ub)   Gauss limitedLinear 1;
// pEqn
    div(alpha,nu) Gauss linear;
// k and EpsilonEqn
    div(phib,k)     Gauss limitedLinear 1;
    div(phib,omega) Gauss limitedLinear 1;
    div(phib,epsilon) Gauss limitedLinear 1;
// ThetaEqn
    div(phi,Theta)  Gauss limitedLinear 1;
}

laplacianSchemes
{
    default         none;
// alphaEqn
    laplacian(alphaPpMag,alpha) Gauss linear uncorrected;
// UEqn
    laplacian(nuEffa,Ua) Gauss linear uncorrected;
    laplacian(nuEffb,Ub) Gauss linear uncorrected;
    laplacian(nuFra,Ua)  Gauss linear uncorrected;
// pEqn
    laplacian((rho*(1|A(U))),p) Gauss linear uncorrected;
// k and EpsilonEqn 
    laplacian(DkEff,k) Gauss linear uncorrected;
    laplacian(DkEff,beta) Gauss linear uncorrected;
    laplacian(DomegaEff,omega) Gauss linear uncorrected;
    laplacian(DepsilonEff,epsilon) Gauss linear uncorrected;
    laplacian(DepsilonEff,beta) Gauss linear uncorrected;
//ThetaEqn
    laplacian(kappa,Theta) Gauss linear uncorrected;
}

interpolationSchemes
{
    default  linear;
}

snGradSchemes
{
    default         uncorrected;
}

fluxRequired
{
    default         no;
    p               ;
}


// ************************************************************************* //
